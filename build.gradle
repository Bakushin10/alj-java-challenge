/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = "$serviceGroupId"
version = "$serviceVersion"
sourceCompatibility = '1.11'

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:2.1.4.RELEASE")
    implementation("org.springframework.boot:spring-boot-starter-web:2.1.4.RELEASE")
	runtimeOnly 'org.postgresql:postgresql'
    testImplementation("org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE")
    compileOnly("org.projectlombok:lombok:1.18.0")
	annotationProcessor 'org.projectlombok:lombok'

	implementation("io.springfox:springfox-swagger2:2.7.0")
	implementation("io.springfox:springfox-swagger-ui:2.7.0")
}

group = "jp.co.axa"
version = "0.0.1-SNAPSHOT"
description = "api-demo"
java.sourceCompatibility = JavaVersion.VERSION_1_8

sourceSets {
	componentTest {
		java.srcDir "$projectDir/src/componentTest/java"
		resources.srcDir "$projectDir/src/componentTest/resources"
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

configurations {
	downloadDependenciesConfig.extendsFrom implementation, testImplementation, testRuntime
	componentTestImplementation.extendsFrom testImplementation
	componentTestRuntime.extendsFrom testRuntime
}

// run the componentTest/** tests
task componentTest(type: Test) {
	description = 'Runs component tests'
	group = 'verification'
	testClassesDirs = sourceSets.componentTest.output.classesDirs
	classpath = sourceSets.componentTest.runtimeClasspath
	outputs.upToDateWhen { false }
}
